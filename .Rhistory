head(df)
unique(df$diag_princ_trim_upper)
df_filtered <-
df %>%
filter(diag_princ_trim_upper %in% c('J10','J11','J12','J13','J14','J15','J16','J17','J18'))
if (!require('dplyr')) install.packages('dplyr'); library('dplyr')
# criando dataframe de pneumonia
df <- read.csv("sih_aih_env_2011_2020_pneucom.csv")
head(df)
unique(df$diag_princ_trim_upper)
df_filtered <-
df %>%
filter(diag_princ_trim_upper %in% c('J10','J11','J12','J13','J14','J15','J16','J17','J18'))
as.data.frame(sort(prop.table(table(df_filtered$idade_real_anos))*100, decreasing = TRUE))
unique(df_filtered$idade_real_anos)
sort(unique(df_filtered$idade_real_anos))
as.data.frame(sort(prop.table(table(df_filtered$sexo))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$raca_cor))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$los_hosp))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$los_uti))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$uti))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$morte))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$ano_inter))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$diag_princ_trim_upper))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$idade-grupo_who))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$idade_grupo_who))*100, decreasing = TRUE))
write.csv(df_filtered, path = 'filtered_sih_aih_env_2011_2020_pneucom.csv')
write.csv(df_filtered, file = 'filtered_sih_aih_env_2011_2020_pneucom.csv')
if (!require('dplyr')) install.packages('dplyr'); library(dplyr)
if (!require('writexl')) install.packages('dplyr'); library(writexl)
# criando dataframe de pneumonia
df <- read.csv("input/sih_aih_env_2011_2020_pneucom.csv")
if (!require('dplyr')) install.packages('dplyr'); library(dplyr)
if (!require('writexl')) install.packages('dplyr'); library(writexl)
# criando dataframe de pneumonia
df <- read.csv("input\sih_aih_env_2011_2020_pneucom.csv")
# criando dataframe de pneumonia
df <- read.csv("input/sih_aih_env_2011_2020_pneucom.csv")
# criando dataframe de pneumonia
df <- read.csv("/input/sih_aih_env_2011_2020_pneucom.csv")
# criando dataframe de pneumonia
df <- read.csv("input//sih_aih_env_2011_2020_pneucom.csv")
# criando dataframe de pneumonia
df <- read.csv("input\\sih_aih_env_2011_2020_pneucom.csv")
# criando dataframe de pneumonia
df <- read.csv("input/sih_aih_env_2011_2020_pneucom.csv")
# criando dataframe de pneumonia
df <- read.csv("input/sih_aih_env_2011_2020_pneucom.csv")
# criando dataframe de pneumonia
df <- read.csv("/input/sih_aih_env_2011_2020_pneucom.csv")
# criando dataframe de pneumonia
df <- read.csv("0_pneumonia/input/sih_aih_env_2011_2020_pneucom.csv")
# criando dataframe de pneumonia
df <- read.csv("D:0_pneumonia/input/sih_aih_env_2011_2020_pneucom.csv")
# criando dataframe de pneumonia
df <- read.csv("D:/0_pneumonia/input/sih_aih_env_2011_2020_pneucom.csv")
# criando dataframe de pneumonia
df <- read.csv("d:/0_pneumonia/input/sih_aih_env_2011_2020_pneucom.csv")
# criando dataframe de pneumonia
df <- read.csv("input/sih_aih_env_2011_2020_pneucom.csv")
head(df)
unique(df$diag_princ_trim_upper)
df_filtered <-
df %>%
filter(diag_princ_trim_upper %in% c('J10','J11','J12','J13','J14','J15','J16','J17','J18'))
write.csv(df_filtered, file = 'output/filtered_sih_aih_env_2011_2020_pneucom.csv')
if (!require('dplyr')) install.packages('dplyr'); library(dplyr)
if (!require('writexl')) install.packages('dplyr'); library(writexl)
################## PNEUMONIA COMUNITÁRIA ##################
# lendo arquivo filtrado de pneumonia
df <- read.csv("output/filtered_sih_aih_env_2011_2020_pneucom.csv")
head(df)
# checando a proporção dos dados
as.data.frame(sort(prop.table(table(df_filtered$estado))*100, decreasing = TRUE))
# checando a proporção dos dados
as.data.frame(sort(prop.table(table(df_filtered$estado))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$regiao))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$sexo))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$raca_cor))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$idade_real_anos))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$los_hosp))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$los_uti))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$uti))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$morte))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$diag_princ_trim_upper))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$ano_inter))*100, decreasing = TRUE)) # curioso que 2019 tem mais registros do que os demais anos; 2020 também, uma hipótese para isso é pandemia
as.data.frame(sort(prop.table(table(df_filtered$idade_grupo_who))*100, decreasing = TRUE)) # tem mais registros de pneumonia em pessoas mais velhas. Talvez isso ocorra porque as pessoas jovens se automedicam em casa, enquanto as mais velhas procuram ajudam médica
################## PNEUMONIA COMUNITÁRIA ##################
# lendo arquivo filtrado de pneumonia
df <- read.csv("output/filtered_sih_aih_env_2011_2020_pneucom.csv") %>%
filter(ano_inter <> 2020)
################## PNEUMONIA COMUNITÁRIA ##################
# lendo arquivo filtrado de pneumonia
df <- read.csv("output/filtered_sih_aih_env_2011_2020_pneucom.csv") %>%
filter(ano_inter != 2020)
# checando a proporção dos dados
as.data.frame(sort(prop.table(table(df_filtered$estado))*100, decreasing = TRUE))
################## PNEUMONIA COMUNITÁRIA ##################
# lendo arquivo filtrado de pneumonia
df <- read.csv("output/filtered_sih_aih_env_2011_2020_pneucom.csv") %>%
# filter(ano_inter != 2020)
head(df)
# checando a proporção dos dados
as.data.frame(sort(prop.table(table(df_filtered$estado))*100, decreasing = TRUE))
################## PNEUMONIA COMUNITÁRIA ##################
# lendo arquivo filtrado de pneumonia
df <- read.csv("output/filtered_sih_aih_env_2011_2020_pneucom.csv") %>%
filter(ano_inter != 2020)
# checando a proporção dos dados
as.data.frame(sort(prop.table(table(df_filtered$estado))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$regiao))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df_filtered$ano_inter))*100, decreasing = TRUE)) # curioso que 2019 tem mais registros do que os demais anos; 2020 também, uma hipótese para isso é pandemia
################## PNEUMONIA COMUNITÁRIA ##################
# lendo arquivo filtrado de pneumonia
df <- read.csv("output/filtered_sih_aih_env_2011_2020_pneucom.csv") %>%
filter(ano_inter != 2020)
as.data.frame(sort(prop.table(table(df_filtered$ano_inter))*100, decreasing = TRUE)) # curioso que 2019 tem mais registros do que os demais anos; 2020 também, uma hipótese para isso é pandemia
as.data.frame(sort(prop.table(table(df$ano_inter))*100, decreasing = TRUE)) # curioso que 2019 tem mais registros do que os demais anos; 2020 também, uma hipótese para isso é pandemia
# checando a proporção dos dados
as.data.frame(sort(prop.table(table(df$estado))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$regiao))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$sexo))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$raca_cor))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$idade_real_anos))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$los_hosp))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$los_uti))*100, decreasing = TRUE))
if (!require('dplyr')) install.packages('dplyr'); library(dplyr)
if (!require('writexl')) install.packages('dplyr'); library(writexl)
################## PNEUMONIA COMUNITÁRIA ##################
# criando dataframe de pneumonia
df <- read.csv("input/sih_aih_env_2011_2020_pneucom.csv")
head(df)
unique(df$diag_princ_trim_upper)
df_filtered <-
df %>%
filter(diag_princ_trim_upper %in% c('J10','J11','J12','J13','J14','J15','J16','J17','J18'), # filtrando para os CIDs de J10 até J18
ano_inter != 2020) # removendo a pandemia
# salvando como csv o dataframe filtrado
write.csv(df_filtered, file = 'output/filtered_sih_aih_env_2011_2020_pneucom.csv')
################## TEMPERATURA ##################
# criando dataframe de temperatura
################## PNEUMONIA COMUNITÁRIA ##################
# lendo arquivo filtrado de pneumonia
df <- read.csv("output/filtered_sih_aih_env_2011_2020_pneucom.csv") %>%
head(df)
################## PNEUMONIA COMUNITÁRIA ##################
# lendo arquivo filtrado de pneumonia
df <- read.csv("output/filtered_sih_aih_env_2011_2020_pneucom.csv") %>%
head(df)
if (!require('dplyr')) install.packages('dplyr'); library(dplyr)
if (!require('writexl')) install.packages('dplyr'); library(writexl)
################## PNEUMONIA COMUNITÁRIA ##################
# criando dataframe de pneumonia
df <- read.csv("input/sih_aih_env_2011_2020_pneucom.csv")
head(df)
unique(df$diag_princ_trim_upper)
df_filtered <-
df %>%
filter(diag_princ_trim_upper %in% c('J10','J11','J12','J13','J14','J15','J16','J17','J18'), # filtrando para os CIDs de J10 até J18
ano_inter != 2020) # removendo a pandemia
# salvando como csv o dataframe filtrado
write.csv(df_filtered, file = 'output/filtered_sih_aih_env_2011_2020_pneucom.csv')
################## TEMPERATURA ##################
# criando dataframe de temperatura
if (!require('dplyr')) install.packages('dplyr'); library(dplyr)
if (!require('writexl')) install.packages('dplyr'); library(writexl)
################## PNEUMONIA COMUNITÁRIA ##################
# lendo arquivo filtrado de pneumonia
df <- read.csv("output/filtered_sih_aih_env_2011_2020_pneucom.csv")
head(df)
# checando a proporção dos dados
as.data.frame(sort(prop.table(table(df$estado))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$regiao))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$sexo))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$raca_cor))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$idade_real_anos))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$los_hosp))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$los_uti))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$uti))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$diag_princ_trim_upper))*100, decreasing = TRUE))
as.data.frame(sort(prop.table(table(df$ano_inter))*100, decreasing = TRUE)) # curioso que 2019 tem mais registros do que os demais anos; 2020 também, uma hipótese para isso é pandemia
as.data.frame(sort(prop.table(table(df$idade_grupo_who))*100, decreasing = TRUE)) # tem mais registros de pneumonia em pessoas mais velhas. Talvez isso ocorra porque as pessoas jovens se automedicam em casa, enquanto as mais velhas procuram ajudam médica
df_filtered <-
df %>%
filter(diag_princ_trim_upper %in% c('J10','J11','J12','J13','J14','J15','J16','J17','J18'), # filtrando para os CIDs de J10 até J18
ano_inter != 2020) %>% # removendo a pandemia
mutate(mes_inter = months(date_inter))
df_filtered <-
df %>%
filter(diag_princ_trim_upper %in% c('J10','J11','J12','J13','J14','J15','J16','J17','J18'), # filtrando para os CIDs de J10 até J18
ano_inter != 2020) %>% # removendo a pandemia
mutate(mes_inter = months(as.Date(date_inter)))
unique(df_filtered$mes_inter)
if (!require('dplyr')) install.packages('dplyr'); library(dplyr)
if (!require('writexl')) install.packages('dplyr'); library(writexl)
################## PNEUMONIA COMUNITÁRIA ##################
# criando dataframe de pneumonia
df <- read.csv("input/sih_aih_env_2011_2020_pneucom.csv")
head(df)
unique(df$diag_princ_trim_upper)
df_filtered <-
df %>%
filter(diag_princ_trim_upper %in% c('J10','J11','J12','J13','J14','J15','J16','J17','J18'), # filtrando para os CIDs de J10 até J18
ano_inter != 2020) %>% # removendo a pandemia
mutate(mes_inter = months(as.Date(date_inter))) # criando coluna com mês
# salvando como csv o dataframe filtrado
write.csv(df_filtered, file = 'output/filtered_sih_aih_env_2011_2020_pneucom.csv')
################## TEMPERATURA ##################
# criando dataframe de temperatura
if (!require('dplyr')) install.packages('dplyr'); library(dplyr)
if (!require('writexl')) install.packages('dplyr'); library(writexl)
################## PNEUMONIA COMUNITÁRIA ##################
# lendo arquivo filtrado de pneumonia
df <- read.csv("output/filtered_sih_aih_env_2011_2020_pneucom.csv")
# agrupando dados por ano
df_group_year <-
df %>%
group_by(ano_inter, regiao, sexo, raca_cor, idade_grupo_who) %>%
summarize(casos = n(),
mortes = sum(mortes),
letalidade = casos / mortes)
# agrupando dados por ano
df_group_year <-
df %>%
group_by(ano_inter, regiao, sexo, raca_cor, idade_grupo_who) %>%
summarize(casos = n(),
mortes = sum(morte),
letalidade = casos / mortes)
head(df_group_year)
View(df_group_year)
# agrupando dados por ano
df_group_year <-
df %>%
group_by(ano_inter, regiao) %>%
summarize(casos = n(),
mortes = sum(morte),
letalidade = casos / mortes)
head(df_group_year)
# agrupando dados por ano
df_group_year <-
df %>%
group_by(ano_inter, regiao) %>%
summarize(casos = n(),
mortes = sum(morte),
letalidade = mortes / casos)
head(df_group_year)
# agrupando dados por ano
df_group_year <-
df %>%
group_by(ano_inter, regiao) %>%
summarize(casos = n(),
mortes = sum(morte),
letalidade = mortes * 100/ casos)
head(df_group_year)
if (!require('ggplot2')) install.packages('dplyr'); library(ggplot2)
if (!require('dplyr')) install.packages('dplyr'); library(dplyr)
if (!require('writexl')) install.packages('dplyr'); library(writexl)
# criando dataframe de relação entre município e região de saúde
municip_regsaud <- read.csv("input/rl_municip_regsaud.csv")
head(municip_regsaud)
regsaud <- read.csv("input/tb_regsaud")
head(regsaud)
# criando dataframe de nomes e códigos das regiões de saúde
regsaud <- read.csv("input/tb_regsaud.csv")
head(regsaud)
# criando dataframe de nomes e códigos das regiões de saúde
regsaud <- read.csv("input/tb_regsaud.csv", encoding = "utf")
head(regsaud)
# criando dataframe de nomes e códigos das regiões de saúde
regsaud <- read.csv("input/tb_regsaud.csv", encoding = "utf-8")
head(regsaud)
# criando dataframe de nomes e códigos das regiões de saúde
regsaud <- read.csv("input/tb_regsaud.csv", encoding = "UTF-8")
head(regsaud)
# criando dataframe de nomes e códigos dos municípios
municip <- read.csv("input/tb_municip.csv", encoding = "UTF-8")
head(municip)
View(municip)
View(municip_regsaud)
View(regsaud)
# criando dataframe de nomes e códigos dos municípios
municip <- read.csv("input/tb_municip.csv",)
head(municip)
# criando dataframe de nomes e códigos dos municípios
municip <- read.csv("input/tb_municip.csv", sep = ";", encoding = "UTF-8")
head(municip)
View(municip)
View(municip)
View(municip_regsaud)
View(regsaud)
colnames(municip_regsaud)
colnames(regsaud)
# juntando dados de municípios e região de saúde com nome da região de saúde
df_municip_regsaude <- left_join(x = municip_regsaud, y = regsaud, by = c("CO_REGSAUD" = "CO_REGSAUD"))
View(df_municip_regsaude)
# criando dataframe de relação entre município e região de saúde
municip_regsaud <- read.csv("input/rl_municip_regsaud.csv", encoding = "UTF-8")
head(municip_regsaud)
# criando dataframe de nomes e códigos das regiões de saúde
regsaud <- read.csv("input/tb_regsaud.csv", encoding = "UTF-8")
head(regsaud)
# criando dataframe de nomes e códigos dos municípios
municip <- read.csv("input/tb_municip.csv", sep = ";", encoding = "UTF-8")
head(municip)
# juntando dados de municípios e região de saúde com nome da região de saúde
df_municip_regsaude <- left_join(x = municip_regsaud, y = regsaud, by = c("CO_REGSAUD" = "CO_REGSAUD"))
unique(df_municip_regsaude$CO_STATUS)
# filtrando por regiões de saúde ativas
df_municip_regsaude <-
df_municip_regsaude %>%
filter(CO_STATUS == "ATIVO")
count(df_municip_regsaude) # total de regiões de saúde ativas
as.data.frame(sort(prop.table(table(df_municip_regsaude$COD_MUNICIP))*100, decreasing = TRUE))
df_municip_regsaude$COD_MUNICIP
as.data.frame(sort(prop.table(table(df_municip_regsaude$CO_MUNICIP))*100, decreasing = TRUE))
count(unique(df_municip_regsaude$CO_MUNICIP))
unique(df_municip_regsaude$CO_MUNICIP)
count(unique(df_municip_regsaude$CO_MUNICIP))
length(unique(df_municip_regsaude$CO_MUNICIP))
unique(df_municip_regsaude$CO_MUNICIP)
as.data.frame(sort(prop.table(table(df_municip_regsaude$CO_MUNICIP))*100, decreasing = TRUE))
# juntando dados de municípios e região de saúde com nome da região de saúde
df_municip_regsaude <- left_join(x = municip_regsaud, y = regsaud, by = c("CO_REGSAUD" = "CO_REGSAUD"))
count(df_municip_regsaude) # total de regiões de saúde ativas
length(unique(df_municip_regsaude$CO_MUNICIP))
# filtrando por regiões de saúde ativas
df_municip_regsaude <-
df_municip_regsaude %>%
filter(CO_STATUS == "ATIVO")
count(df_municip_regsaude) # total de regiões de saúde ativas
length(unique(df_municip_regsaude$CO_MUNICIP))
length(unique(df_municip_regsaude$CO_REGSAUD))
View(municip)
View(regsaud)
unique(df_municip_regsaude$CO_REGSAUD)
unique(regsaude$CO_REGSAUD)
unique(regsaud$CO_REGSAUD)
lenght(unique(regsaud$CO_REGSAUD))
length(unique(regsaud$CO_REGSAUD))
count(filter(regsaud, CO_STATUS == "ATIVO"))
count(filter(regsaud, CO_STATUS <> "IGNOR"))
count(filter(regsaud, CO_STATUS != "IGNOR"))
if (!require('dplyr')) install.packages('dplyr'); library(dplyr)
if (!require('writexl')) install.packages('dplyr'); library(writexl)
# criando dataframe de relação entre município e região de saúde
municip_regsaud <- read.csv("input/rl_municip_regsaud.csv", encoding = "UTF-8")
head(municip_regsaud)
# criando dataframe de nomes e códigos das regiões de saúde
regsaud <- read.csv("input/tb_regsaud.csv", encoding = "UTF-8")
head(regsaud)
# criando dataframe de nomes e códigos dos municípios
municip <- read.csv("input/tb_municip.csv", sep = ";", encoding = "UTF-8")
head(municip)
# juntando dados de municípios e região de saúde com nome da região de saúde
df_municip_regsaude <- left_join(x = municip_regsaud, y = regsaud, by = c("CO_REGSAUD" = "CO_REGSAUD"))
# filtrando por regiões de saúde ativas
df_municip_regsaude <-
df_municip_regsaude %>%
filter(CO_STATUS == "ATIVO")
# 1ª incosistência as linhas abaixo deveriam dar o mesmo valor, mas estão divergindo
count(df_municip_regsaude) # total de regiões de saúde ativas
length(unique(df_municip_regsaude$CO_REGSAUD)) # total de regiões de saúde ativas
length(unique(df_municip_regsaude$CO_MUNICIP))
as.data.frame(sort(prop.table(table(df_municip_regsaude$CO_MUNICIP))*100, decreasing = TRUE))
if (!require('dplyr')) install.packages('dplyr'); library(dplyr)
if (!require('writexl')) install.packages('dplyr'); library(writexl)
################## PNEUMONIA COMUNITÁRIA ##################
# criando dataframe de pneumonia
df <- read.csv("input/sih_aih_env_2011_2020_pneucom.csv")
head(df)
sort(unique(df$diag_princ_trim_upper))
df_filtered <-
df %>%
filter(diag_princ_trim_upper %like% 'J10|J11|J12|J13|J14|J15|J16|J17|J18', # filtrando para os CIDs de J10 até J18
ano_inter != 2020, # removendo a pandemia
idade_real_anos >= 2) %>% # removendo casos de pessoas com menos de 20 anos
mutate(mes_inter = months(as.Date(date_inter))) # criando coluna com mês
unique(df_filtered$ano_inter)
if (!require('dplyr')) install.packages('dplyr'); library(dplyr)
if (!require('writexl')) install.packages('dplyr'); library(writexl)
################## PNEUMONIA COMUNITÁRIA ##################
# criando dataframe de pneumonia
df <- read.csv("input/sih_aih_env_2011_2020_pneucom.csv")
head(df)
sort(unique(df$diag_princ_trim_upper))
df_filtered <-
df %>%
filter(diag_princ_trim_upper %like% 'J10|J11|J12|J13|J14|J15|J16|J17|J18', # filtrando para os CIDs de J10 até J18
ano_inter != 2020, # removendo a pandemia
idade_real_anos >= 2) %>% # removendo casos de pessoas com menos de 20 anos
mutate(mes_inter = months(as.Date(date_inter))) # criando coluna com mês
library(data.table)
df_filtered <-
df %>%
filter(diag_princ_trim_upper %like% 'J10|J11|J12|J13|J14|J15|J16|J17|J18', # filtrando para os CIDs de J10 até J18
ano_inter != 2020, # removendo a pandemia
idade_real_anos >= 2) %>% # removendo casos de pessoas com menos de 20 anos
mutate(mes_inter = months(as.Date(date_inter))) # criando coluna com mês
unique(df_filtered$ano_inter)
View(df_filtered)
